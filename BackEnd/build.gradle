plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.minePing'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	set('springAiVersion', "1.0.0")
}

dependencies {
	// 🔹 Spring Boot 주요 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA (Hibernate 기반) 사용을 위한 스타터
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 어플리케이션 (MVC, REST 등) 개발을 위한 스타터
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation 지원

	// 🔹 데이터베이스 관련
	implementation 'mysql:mysql-connector-java:8.0.32' // MySQL 연결을 위한 JDBC 드라이버
	runtimeOnly 'com.h2database:h2' // 개발/테스트용 인메모리 H2 데이터베이스

	// 🔹 Lombok: Getter, Setter 등 코드 자동 생성을 위한 도구
	compileOnly 'org.projectlombok:lombok' // 컴파일 시에만 사용되는 Lombok 라이브러리
	annotationProcessor 'org.projectlombok:lombok' // Lombok 애노테이션 처리기 (코드 생성)

	// 🔹 MapStruct: DTO ↔ Entity 변환용 매핑 라이브러리
	implementation 'org.mapstruct:mapstruct:1.5.5.Final' // MapStruct 매핑 인터페이스 정의
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // MapStruct 구현 클래스 생성용 애노테이션 프로세서

	// 🔹 개발 편의 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 자동 리스타트 및 라이브 리로딩 지원

	// 🔹 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit, Mockito 등 포함된 테스트용 스타터
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit Platform 런타임 실행을 위한 의존성

	implementation 'org.springframework.boot:spring-boot-starter-security'

	//이미지 API
	implementation 'org.reactivestreams:reactive-streams:1.0.3'

	//jwt로그인 관련
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.656'
	//Spring Boot에서 메일 전송 기능을 간편하게 구현할 수 있도록
	//필요한 의존성들을 묶어서 제공하는 스타터 패키지입니다.
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	//메일형식을 html로 쉽게 작성하기위한 템플릿엔진
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//AI
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-advisors-vector-store'
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}
jar {
	enabled = false
}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-parameters']

    // Lombok과 MapStruct 애노테이션 프로세서 순서 설정
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

tasks.named('test') {
	useJUnitPlatform()
}
